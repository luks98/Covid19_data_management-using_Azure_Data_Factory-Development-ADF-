{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "covid-reporting-adf-re"
		},
		"Tr_population_data_arrived_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a921c292-16ca-454d-866f-9290c9ca602c/resourceGroups/Covid-reporting-rg/providers/Microsoft.Storage/storageAccounts/covidreportingsa59"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ds_to_copy_transformed_cases_and_death_to_AsqlDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Cases_and_Deaths_Transformed.csv",
						"folderPath": "transformed_cases_deaths",
						"fileSystem": "transformeddatafromdataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "confirmed cases_count",
						"type": "String"
					},
					{
						"name": "deaths_count",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "daily_count",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_to_copy_transformed_dailyHA_to_Asql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "daily hospital_admission.csv",
						"folderPath": "ecdc/daily hospital_admission",
						"fileSystem": "transformeddatafromdataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "reported_date",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": " hospital occupancy_count",
						"type": "String"
					},
					{
						"name": " ICU occupancy_count",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_to_injest_data_from_http_to_ADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sinkFilename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().sinkFilename",
							"type": "Expression"
						},
						"folderPath": "ecdc_data",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_to_transform_deaths_and_cases')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ds_for_transformation"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cases_deaths.csv",
						"folderPath": "ecdc_data/cases_deaths",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "daily_count",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "rate_14_day",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_to_transform_dim_date_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ds_for_transformation"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_date.csv",
						"folderPath": "dim_date",
						"fileSystem": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date_key",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "day",
						"type": "String"
					},
					{
						"name": "day_name",
						"type": "String"
					},
					{
						"name": "day_of_year",
						"type": "String"
					},
					{
						"name": "week_of_month",
						"type": "String"
					},
					{
						"name": "week_of_year",
						"type": "String"
					},
					{
						"name": "month_name",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_to_transform_hospital_addmission_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covidreportingdl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ds_for_transformation"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "hospital_admissions.csv",
						"folderPath": "ecdc_data/hospital_admissions",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_to_copy_transformed_Daily_HA_to_ASQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Daily_H_A data to Asql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_to_copy_transformed_dailyHA_to_Asql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_daily_hospital_addmission",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines_to_load_transformed_data_to_AsqlDB"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T06:51:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_to_copy_transformed_dailyHA_to_Asql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_to_copy_transformed_cases_and_deaths_to_AsqlDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_cases_and_deaths_to_Asql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE covid_reporting.cases_and_deaths",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_to_copy_transformed_cases_and_death_to_AsqlDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_cases_and_deaths",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines_to_load_transformed_data_to_AsqlDB"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T06:51:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_to_copy_transformed_cases_and_death_to_AsqlDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_to_ingest_ecdc_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Ecdc File List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_ecdc_controlflow_activity",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute Copy For All Records From ECDC",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Ecdc File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Ecdc File List').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy ECDC data from http to ADLS_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_to_copy_ecdc_data_from_http",
											"type": "DatasetReference",
											"parameters": {
												"sourceRelativeURL": {
													"value": "@item().sourceRelativeURL",
													"type": "Expression"
												},
												"sourceBaseURL": {
													"value": "@item().sourceBaseURL",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_to_injest_data_from_http_to_ADLS",
											"type": "DatasetReference",
											"parameters": {
												"sinkFilename": {
													"value": "@item().sinkFileName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "data_ingesting_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T06:51:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_to_injest_data_from_http_to_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_population_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validation1",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_population_raw_gz",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:30:00",
							"sleep": 10
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Validation1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_population_raw_gz",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"exists",
								"size"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get Metadata1').output.columnCount,13)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "send email",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://file_incompatable",
										"method": "POST",
										"headers": {},
										"body": "dummy"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy  population data_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_population_raw_gz",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_population_raw_tsv",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "data_ingesting_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T06:51:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sqlize_testing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy testing data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [covid_reporting].[testing];",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "country_code_2_digit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "country_code_3_digit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "year_week",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "week_start_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "week_end_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "new_cases",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "tests_done",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 9
										},
										"sink": {
											"name": "population",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "testing_data_source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_processed_testing",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_testing",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines_to_load_transformed_data_to_AsqlDB"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T06:51:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataflow_to_transform_Hospital_addmission_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_to_transform_hospital_addmission_data",
								"type": "DatasetReference"
							},
							"name": "sourceOfHospitalAddmissionData"
						},
						{
							"dataset": {
								"referenceName": "ds_country_lookup",
								"type": "DatasetReference"
							},
							"name": "CountrySource"
						},
						{
							"dataset": {
								"referenceName": "ds_to_transform_dim_date_file",
								"type": "DatasetReference"
							},
							"name": "DimDateSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_to_copy_the_transformed_hospital_admission_data_to_ADLS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "ds_to_copy_daily_hospital_addmission_data_to_adls",
								"type": "DatasetReference"
							},
							"name": "sinkforDailyhospitalAdmissionData"
						}
					],
					"transformations": [
						{
							"name": "selectHospitalAdmission"
						},
						{
							"name": "lookupCountry"
						},
						{
							"name": "select1"
						},
						{
							"name": "SplitDailyFromWeekly"
						},
						{
							"name": "aggregateDimDate"
						},
						{
							"name": "joinWeekStreamWithDimDate"
						},
						{
							"name": "pivotWeekly"
						},
						{
							"name": "pivotDailyData"
						},
						{
							"name": "sortWeeklyData"
						},
						{
							"name": "sortDailyData"
						},
						{
							"name": "select2"
						},
						{
							"name": "select3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          indicator as string,",
						"          date as date,",
						"          year_week as string,",
						"          value as double,",
						"          source as string,",
						"          url as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceOfHospitalAddmissionData",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CountrySource",
						"source(output(",
						"          date_key as string,",
						"          date as string,",
						"          year as string,",
						"          month as string,",
						"          day as string,",
						"          day_name as string,",
						"          day_of_year as string,",
						"          week_of_month as string,",
						"          week_of_year as string,",
						"          month_name as string,",
						"          year_month as string,",
						"          year_week as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DimDateSource",
						"sourceOfHospitalAddmissionData select(mapColumn(",
						"          country,",
						"          indicator,",
						"          reported_date = date,",
						"          reported_year_week = year_week,",
						"          value,",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectHospitalAdmission",
						"selectHospitalAdmission, CountrySource lookup(selectHospitalAdmission@country == CountrySource@country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookupCountry",
						"lookupCountry select(mapColumn(",
						"          country = selectHospitalAdmission@country,",
						"          indicator,",
						"          reported_date,",
						"          reported_year_week,",
						"          value,",
						"          source,",
						"          country = CountrySource@country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 split(indicator == 'Weekly new hospital admissions per 100k' || indicator == 'Weekly new ICU admission per 100k',",
						"     disjoint: false) ~> SplitDailyFromWeekly@(WEEKLY, DAILY)",
						"DimDateSource aggregate(groupBy(ecdc_year_week = year+'-W'+lpad(week_of_year,2,'0')),",
						"     week_start_date = min(date),",
						"          week_end_date = max(date)) ~> aggregateDimDate",
						"SplitDailyFromWeekly@WEEKLY, aggregateDimDate join(reported_year_week == ecdc_year_week,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinWeekStreamWithDimDate",
						"joinWeekStreamWithDimDate pivot(groupBy(country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          reported_year_week,",
						"          source,",
						"          week_start_date,",
						"          week_end_date),",
						"     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
						"     { count} = sum(value),",
						"     columnNaming: '$V_$N',",
						"     lateral: true) ~> pivotWeekly",
						"SplitDailyFromWeekly@DAILY pivot(groupBy(country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          reported_date,",
						"          source),",
						"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
						"     count = sum(value),",
						"     columnNaming: '$V_$N',",
						"     lateral: true) ~> pivotDailyData",
						"pivotWeekly sort(desc(reported_year_week, true),",
						"     asc(country, true),",
						"     partitionBy('hash', 1)) ~> sortWeeklyData",
						"pivotDailyData sort(desc(reported_date, true),",
						"     asc(country, true),",
						"     partitionBy('hash', 1)) ~> sortDailyData",
						"sortWeeklyData select(mapColumn(",
						"          country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          reported_year_week,",
						"          reported_week_start_date = week_start_date,",
						"          reported_week_end_date = week_end_date,",
						"          new_hospital_occupency_count = {Weekly new hospital admissions per 100k_ count},",
						"          new_icu_occupency_count = {Weekly new ICU admissions per 100k_ count},",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"sortDailyData select(mapColumn(",
						"          country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          reported_date,",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select3",
						"select2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['weekly hospital_admission.csv'],",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1",
						"select3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['daily hospital_admission.csv'],",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkforDailyhospitalAdmissionData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_to_transform_hospital_addmission_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_to_transform_dim_date_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_to_transform_cases_and_deaths')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_to_transform_deaths_and_cases",
								"type": "DatasetReference"
							},
							"name": "CasesAndDeathsSource"
						},
						{
							"dataset": {
								"referenceName": "ds_country_lookup",
								"type": "DatasetReference"
							},
							"name": "CountryLookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_to_copy_the_weekly_transformed_cases_and_deaths_data_to_adls",
								"type": "DatasetReference"
							},
							"name": "CasesAndDeathSink"
						}
					],
					"transformations": [
						{
							"name": "filterEuropeOnly"
						},
						{
							"name": "selectOnlyReqColumns"
						},
						{
							"name": "PivotCount"
						},
						{
							"name": "lookupcountry"
						},
						{
							"name": "selectforsink"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          country_code as string,",
						"          continent as string,",
						"          population as integer,",
						"          indicator as string,",
						"          daily_count as integer,",
						"          date as date,",
						"          rate_14_day as double,",
						"          source as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CasesAndDeathsSource",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CountryLookup",
						"CasesAndDeathsSource filter(continent == 'Europe'  && not(isNull(country_code))) ~> filterEuropeOnly",
						"filterEuropeOnly select(mapColumn(",
						"          country,",
						"          country_code,",
						"          population,",
						"          indicator,",
						"          daily_count,",
						"          source,",
						"          each(match(name=='date'),",
						"               'reported'+'_date' = $$)",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> selectOnlyReqColumns",
						"selectOnlyReqColumns pivot(groupBy(country,",
						"          country_code,",
						"          population,",
						"          source,",
						"          daily_count),",
						"     pivotBy(indicator, ['confirmed cases', 'deaths']),",
						"     count = sum(daily_count),",
						"     columnNaming: '$V_$N',",
						"     lateral: true) ~> PivotCount",
						"PivotCount, CountryLookup lookup(PivotCount@country == CountryLookup@country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookupcountry",
						"lookupcountry select(mapColumn(",
						"          country = PivotCount@country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population = PivotCount@population,",
						"          confirmed_cases_count = {confirmed cases_count},",
						"          deaths_count,",
						"          source,",
						"          daily_count",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectforsink",
						"selectforsink sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Cases_and_Deaths_Transformed.csv'],",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> CasesAndDeathSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_to_transform_deaths_and_cases')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_to_execute_pupulation_pipelines')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Ingest population data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ingest_population_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Transformed Population Data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Ingest population data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeline_for_population_data_transformation_by_databrick",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "EXECUTION PIPELINE"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T06:51:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_population_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_to_transform_and_load_to_ADLS__cases_and_deaths_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow to transform cases and deaths",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_to_transform_cases_and_deaths",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CasesAndDeathsSource": {},
									"CountryLookup": {},
									"CasesAndDeathSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "data_transforming_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T06:51:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_to_transform_cases_and_deaths')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_to_transform_and_load_to_ADLS__hospital_admission_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dataflow_to_transform_Hospital_addmission_data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow_to_transform_Hospital_addmission_data",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceOfHospitalAddmissionData": {},
									"CountrySource": {},
									"DimDateSource": {},
									"sink1": {},
									"sinkforDailyhospitalAdmissionData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "data_transforming_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T06:51:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Dataflow_to_transform_Hospital_addmission_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tr_ingest_ecdc_data')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline_to_ingest_ecdc_data",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2023-08-14T23:59:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline_to_ingest_ecdc_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tr_population_data_arrived')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline_to_execute_pupulation_pipelines",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/populationdata/blobs/population_by_age.tsv.gz",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Tr_population_data_arrived_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline_to_execute_pupulation_pipelines')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tr_transform_Hospital_Admission_Data')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline_to_transform_and_load_to_ADLS__hospital_admission_data",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2023-08-14T23:59:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "Tr_ingest_ecdc_data",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline_to_transform_and_load_to_ADLS__hospital_admission_data')]",
				"[concat(variables('factoryId'), '/triggers/Tr_ingest_ecdc_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tr_transforme_cases_and_deaths')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline_to_transform_and_load_to_ADLS__cases_and_deaths_data",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2023-08-14T23:59:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "Tr_ingest_ecdc_data",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline_to_transform_and_load_to_ADLS__cases_and_deaths_data')]",
				"[concat(variables('factoryId'), '/triggers/Tr_ingest_ecdc_data')]"
			]
		}
	]
}